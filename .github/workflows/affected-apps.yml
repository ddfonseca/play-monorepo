name: Affected Apps

on:
  push:
    branches:
      - main

jobs:
  lint_test_build:
    name: 'Lint, Test, Build Affected Apps'
    if: github.event_name == 'push'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          submodules: true

      - name: Set NX shas
        uses: nrwl/nx-set-shas@v3

      - name: Install dependencies
        run: npm ci

      - name: Determine App to Deploy
        id: appcheck
        run: ./.github/scripts/affected-apps.sh

      - name: Print Affected Apps
        run: |
         echo "Affected Apps: ${{ env.AFFECTED_APPS }}"

      - name: Run linting
        if: success()
        run: npx nx affected -t lint --parallel=3

      - name: Run tests
        if: success()
        run: npx nx affected -t test --parallel=3 --configuration=ci

      - name: Build
        if: success()
        run: npx nx affected -t build --parallel=3 --configuration=ci

      - name: Upload affected-apps.txt
        uses: actions/upload-artifact@v2
        with:
          name: affected-apps
          path: ${{ github.workspace }}/affected-apps.txt

      - name: Upload dist folder
        uses: actions/upload-artifact@v3
        with:
          name: dist
          path: dist

  deploy_app_01:
    name: 'Deploy App 01'
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    needs: lint_test_build
    steps:
      - name: Download affected-apps.txt
        uses: actions/download-artifact@v2
        with:
          name: affected-apps
          path: affected-apps.txt

      - name: Check affected apps
        id: checkAffectedApps
        run: |
          if grep -q "app1" affected-apps.txt; then
            echo "App1 is affected!"
            echo "::set-output name=app1_affected::true"
          else
            echo "App1 is not affected."
            echo "::set-output name=app1_affected::false"
          fi
      - name: Download dist folder
        uses: actions/download-artifact@v3
        with:
          name: dist
      - name: Deploy App01
        if: steps.checkAffectedApps.outputs.app1_affected == 'true'
        id: deployApp1
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_RED_GRASS_05828B01E }}
          repo_token: ${{ secrets.GITHUB_TOKEN }} # Used for Github integrations (i.e. PR comments)
          action: 'upload'
          app_location: '/dist/apps/app1'
          output_location: ''

  deploy_app_02:
    name: 'Deploy App 02'
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    needs: lint_test_build
    steps:
      - name: Download affected-apps.txt
        uses: actions/download-artifact@v2
        with:
          name: affected-apps
          path: affected-apps.txt

      - name: Check affected apps
        id: checkAffectedApps
        run: |
          if grep -q "app2" affected-apps.txt; then
            echo "App2 is affected!"
            echo "::set-output name=app2_affected::true"
          else
            echo "App2 is not affected."
            echo "::set-output name=app2_affected::false"
          fi

      - name: Download dist folder
        uses: actions/download-artifact@v3
        with:
          name: dist

      - name: Deploy App02
        if: steps.checkAffectedApps.outputs.app2_affected == 'true'
        id: deployApp2
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_HAPPY_ROCK_0061A3810 }}
          repo_token: ${{ secrets.GITHUB_TOKEN }} # Used for Github integrations (i.e. PR comments)
          action: 'upload'
          app_location: '/dist/apps/app2'
          output_location: ''

